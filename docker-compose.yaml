version: '3.2'
services:
  mongo:
    build:
      context: ./mongoDB
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - mongodata:/data/db
  app:
    restart: always
    build:
      context: ./App
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - ./log:/usr/src/app/logs
    links:
      - mongo
      - redis
      - elasticsearch
    depends_on:
      - mongo
      - redis
      - elasticsearch
  redis:
    image: redis
    restart: always
    ports:
      - '6379:6379'
  elasticsearch:
    build:
      context: ./elasticsearch
    ports: 
      - '9200:9200'
      - '9300:9300'
    environment:
    #   - xpack.security.enabled=false
      - discovery.type=single-node
    volumes:
      - ./elasticsearch/data:/usr/share/elasticsearch/data
  logstash:
    build:
      context: ./logstash
    ports:
      - "5000:5000"
      - "9600:9600"
    volumes:
      - ./logstash/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
  filebeat:
    build:
      context: ./filebeat
    volumes:
      - ./log:/var/log
    depends_on:
      - logstash
    links:
      - logstash
  kibana:
    build:
      context: ./kibana
      dockerfile: Dockerfile
    ports:
      - '5601:5601'
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    links:
      - elasticsearch
    depends_on:
      - elasticsearch
volumes:
  mongodata: